
// содержит признак первого формирования отчета
Перем ЭтоПервый;

// объявление табличного документа и макета
Перем Таб;
Перем Макет;

// объявим области макета, для возможности дальнейшего использования в любой части модуля
Перем ОбластьУровень0;
Перем ОбластьУровень1;
Перем ОбластьУровень2;
Перем ОбластьУровень3;
Перем ОбластьУровень4;
Перем ОбластьУровень5;
Перем ОбластьУровень6;
Перем ОбластьУровень7;
Перем ОбластьУровень8;
Перем ОбластьУровень9;

// уровень имени свойства объекта
Перем УровеньЗаголовка;

// количество объектов конфигурации для анализа
Перем КоличествоОбъектовМетаданных;

// версия платформы и релиза
Перем ВерсияПлатформы;
Перем НомерРелиза;

// формирование отчета о метаданных конфигурации
Процедура КнопкаСформироватьНажатие()
	Таб.Очистить();
	
	Если ВерсияПлатформы <> 81 И ВерсияПлатформы <> 82 Тогда
		Предупреждение("Отчет возможно сформировать только в 1С: Предприятии 8.1 или 8.2");
		Возврат;
	КонецЕсли;
	
	Если ВерсияПлатформы = 82 Тогда 
		Если НомерРелиза > 14 Тогда
			КоличествоОбъектовМетаданных = 39;
		Иначе
			КоличествоОбъектовМетаданных = 38;	
		КонецЕсли;
	Иначе
		КоличествоОбъектовМетаданных = 33;	
	КонецЕсли;
	
	Индикатор1 = 0;
	ЭлементыФормы.Индикатор1.МаксимальноеЗначение = СписокОбъектов.Количество();
	
	Таб.НачатьАвтогруппировкуСтрок();
	
	ВыводИнформацииПоКонфигурации();	
	
	// ОБЩИЕ	
	Поиск = СписокОбъектов.НайтиПоЗначению("Общие");
	Если Поиск <> Неопределено Тогда
		Если Поиск.Пометка Тогда
			ВыводДанныхВТабличныйДокумент(ОбластьУровень0, Поиск.Значение);
		КонецЕсли;	
	КонецЕсли;
	
	Для Каждого СтрокаОбъекта Из СписокОбъектов Цикл
		ЭлементыФормы.ИмяОбъекта.Заголовок = "Вывод информации по объекту метаданных: " + СтрЗаменить(СтрокаОбъекта.Представление, "-", "");
		Индикатор1 = Индикатор1 + 1;

		Если НЕ СтрокаОбъекта.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		Если Прав(СтрокаОбъекта.Представление, 1) = "-" Тогда
			ВыводИнформацииПоОбъектуМетаданных(Лев(СтрокаОбъекта.Представление, СтрДлина(СтрокаОбъекта.Представление) - 1), СтрокаОбъекта.Картинка, 1);
		Иначе
			ВыводИнформацииПоОбъектуМетаданных(СтрокаОбъекта.Представление, СтрокаОбъекта.Картинка);
		КонецЕсли;
	КонецЦикла;		
	
	Таб.ЗакончитьАвтогруппировкуСтрок();
	
	Таб.ТолькоПросмотр = Истина;
	Таб.Автомасштаб = Истина;
	
	ЭлементыФормы.ИмяОбъекта.Заголовок = "Вывод списка объектов метаданных завершен";
	
	// настройка группироваок
	НастройкаГруппировок();
КонецПроцедуры

// возвращает текущую версию платформы
Процедура ПолучитьВерсиюПлатформы()
	СисИнфо = Новый СистемнаяИнформация;	
	Версия = СисИнфо.ВерсияПриложения;
	
	НомерПлатформы = СтрЗаменить(Лев(Версия, 3), ".", "");
	Версия = Сред(Версия, 5);
	
	Поиск = Найти(Версия, ".");
	НомерРелиза = Лев(Версия, Поиск - 1);
	Релиз = Сред(Версия, Поиск + 1);
	
	Попытка
		ВерсияПлатформы = Число(НомерПлатформы);
		НомерРелиза = Число(НомерРелиза);
	Исключение КонецПопытки;	
КонецПроцедуры

// управляет группировками отчета с помощью динамически построенного подменю кнопок
Процедура НастройкаГруппировок()
	Если ЭтоПервый Тогда
		ЭтоПервый = Ложь;
		Если ЭлементыФормы.ПолеТабличногоДокумента1.КоличествоУровнейГруппировокСтрок() > 1 Тогда
			// добави разделитель
			ЭлементыФормы.ДействияФормы.Кнопки.Добавить("РазделительУровни", 
			ТипКнопкиКоманднойПанели.Разделитель);

			КнопкаУровни = ЭлементыФормы.ДействияФормы.Кнопки.Добавить("Уровни", 
			ТипКнопкиКоманднойПанели.Подменю, 
			НСтр("ru='Показать уровень'"), );
			Действие = Новый Действие("ОткрытьУровень");
			Кол = ЭлементыФормы.ПолеТабличногоДокумента1.КоличествоУровнейГруппировокСтрок();
			Для У = 1 По Кол Цикл
				ИмяКнопки = "К" + У;
				НадписьКнопки = "Уровень " + У;
				
				КнопкаУровни.Кнопки.Добавить(ИмяКнопки, 
				ТипКнопкиКоманднойПанели.Действие, 
				НадписьКнопки, Действие);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	ЭлементыФормы.ПолеТабличногоДокумента1.ПоказатьУровеньГруппировокСтрок(0);
КонецПроцедуры

// управляет отображением уровней группировок
Процедура ОткрытьУровень(Кнопка)
	
	Уровень = Число(Сред(Кнопка.Имя, 2)) - 1;
	У = ЭлементыФормы.ПолеТабличногоДокумента1.КоличествоУровнейГруппировокСтрок() - 1;
	Пока У > Уровень Цикл
		ЭлементыФормы.ПолеТабличногоДокумента1.ПоказатьУровеньГруппировокСтрок(У);
		У = У - 1;
	КонецЦикла;
	ЭлементыФормы.ПолеТабличногоДокумента1.ПоказатьУровеньГруппировокСтрок(Уровень);
	
КонецПроцедуры

// выводит заголовок и значение в разные уровни
Процедура ВыводДанныхВТабличныйДокументГруппы(Объект, НазваниеГруппы, УровеньГруппировки = 2)
	ИмяГруппы = СтрЗаменить(НазваниеГруппы, " ", "");
	ВыводДанныхВТабличныйДокумент(Макет.ПолучитьОбласть("Уровень" + УровеньГруппировки), НазваниеГруппы, Объект[ИмяГруппы]);
	//ВыводДанныхВТабличныйДокумент(Макет.ПолучитьОбласть("Уровень" + (УровеньГруппировки + 1)), Объект[ИмяГруппы]);
КонецПроцедуры	

// выводит информацию в табличный документ
Процедура ВыводДанныхВТабличныйДокумент(Область, Значение, Комментарий = "", Тип = "", Картинка = Неопределено, РазворачиватьГруппу = Ложь)
	// получим уровень группировки
	НомерГруппы = Число(Прав(Область.Области.Получить(0).Имя, 1));
	
	// вывод в табличный документ
	Область.Параметры.Значение = Значение;
	Область.Параметры.Тип = Тип;
	Область.Параметры.Комментарий = Комментарий;
	
	// изображение объекта
	Попытка
		ПоискКартинки = ТаблицаЗначков.НайтиПоЗначению(СтрЗаменить(СтрЗаменить(Значение, " ", ""), "-", ""));
		Если ПоискКартинки <> Неопределено Тогда
			Картинка = ПоискКартинки.Картинка;
		КонецЕсли;	
		Область.Рисунки["Фото" + НомерГруппы].Картинка = Картинка;
	Исключение КонецПопытки;
	Таб.Вывести(Область, НомерГруппы, , РазворачиватьГруппу);	
	
	Если Значение = "Документы" И НомерГруппы = 0 Тогда
		Поиск = СписокОбъектов.НайтиПоЗначению("НумераторыДокументов");
		Если Поиск <> Неопределено Тогда
			Если Поиск.Пометка Тогда
				ВыводИнформацииПоОбъектуМетаданных(СтрЗаменить(Поиск.Представление, "-", ""), , 1);
			КонецЕсли;	
		КонецЕсли;
		Поиск = СписокОбъектов.НайтиПоЗначению("Последовательности");
		Если Поиск <> Неопределено Тогда
			Если Поиск.Пометка Тогда
				ВыводИнформацииПоОбъектуМетаданных(СтрЗаменить(Поиск.Представление, "-", ""), , 1);
			КонецЕсли;	
		КонецЕсли;	
		
		ЭлементыФормы.ИмяОбъекта.Заголовок = "Вывод информации по объекту метаданных: Документы";
	КонецЕсли;	
КонецПроцедуры

// получает информацию о конфигурации
Процедура ВыводИнформацииПоКонфигурации()
	СисИнфо = Новый СистемнаяИнформация;	
	Версия = СисИнфо.ВерсияПриложения;

	ИнформацияОКонфигурации = 								"Версия платформы: "	+ Версия + Символы.ПС +	
	?(ЗначениеЗаполнено(Метаданные.Версия), 				"Версия конфигурации: " + Метаданные.Версия 			+ Символы.ПС, "") + 
	?(ЗначениеЗаполнено(Метаданные.Поставщик), 				"Поставщик: " 			+ Метаданные.Поставщик 			+ Символы.ПС, "") + 
	?(ЗначениеЗаполнено(Метаданные.АвторскиеПрава), 		"Авторские права: " 	+ Метаданные.АвторскиеПрава 	+ Символы.ПС, "") + 
	?(ЗначениеЗаполнено(Метаданные.КраткаяИнформация), 		"Краткая информация: " 	+ Метаданные.КраткаяИнформация 	+ Символы.ПС, "") + 
	?(ЗначениеЗаполнено(Метаданные.ПодробнаяИнформация), 	"Подробная информация: " + Метаданные.ПодробнаяИнформация, "");
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Информация = ?(НЕ ПустаяСтрока(Метаданные.Синоним), Метаданные.Синоним, Метаданные.Имя);
	Область.Параметры.Значение = ?(ПустаяСтрока(ИнформацияОКонфигурации), "описание метаданных конфигурации", ИнформацияОКонфигурации);
	Таб.Вывести(Область);
КонецПроцедуры

// получает информацию об основных объектах конфигурации
Процедура ВыводИнформацииПоОбъектуМетаданных(ОбъектМетаданных, Картинка, НачальныйУровеньГруппировки = 0)	
	ИмяОбъекта = СтрЗаменить(ОбъектМетаданных, " ", "");
	
	Попытка
		Если Метаданные[ИмяОбъекта].Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
	Исключение
		Возврат;
	КонецПопытки;
	
	ВыводДанныхВТабличныйДокумент(Макет.ПолучитьОбласть("Уровень" + НачальныйУровеньГруппировки), ОбъектМетаданных, , , Картинка);
	
	УровеньЗаголовка = 2;

	Для Каждого Объект Из Метаданные[ИмяОбъекта] Цикл
		ОбработкаПрерыванияПользователя();
		
		ЭлементыФормы.ИмяОбъекта.Заголовок = "Вывод информации по объекту метаданных: " + ОбъектМетаданных + " " + ?(ПустаяСтрока(Объект.Синоним), Объект.Имя, Объект.Синоним);

		Попытка
			Пояснение = ?(ПустаяСтрока(Объект.Пояснение), "", " (" + Объект.Пояснение + ")");
		Исключение
			Пояснение = "";
		КонецПопытки;
		Попытка
			Если ВРЕГ(ИмяОбъекта) = "ОБЩИЕМАКЕТЫ" Тогда 
				ТипОбъекта = Объект.ТипМакета;
			Иначе
				ТипОбъекта = ОпределитьТипОбъекта(Объект);
			КонецЕсли;	
		Исключение
			ТипОбъекта = "";
		КонецПопытки;	
		ВыводДанныхВТабличныйДокумент(Макет.ПолучитьОбласть("Уровень" + (1 + НачальныйУровеньГруппировки)), ?(ПустаяСтрока(Объект.Синоним), Объект.Имя, Объект.Синоним), Объект.Комментарий + Пояснение, ТипОбъекта, Картинка);
		
		Если ВыводитьТолькоИменаОбъектов Тогда
			Продолжить;
		КонецЕсли;
		
		Если ВРЕГ(ИмяОбъекта) = "ПОДСИСТЕМЫ" Тогда
			ВыводИнформацииПоОбъекту(Объект, "Подсистемы", , , Неопределено, Ложь);
			УровеньЗаголовка = 2;
		ИначеЕсли ВРЕГ(ИмяОбъекта) = "РЕГЛАМЕНТНЫЕЗАДАНИЯ" Тогда	
			ВыводДанныхВТабличныйДокументГруппы(Объект, "Использование", 3);
			ВыводДанныхВТабличныйДокументГруппы(Объект, "ИмяМетода", 3);
			ВыводДанныхВТабличныйДокументГруппы(Объект, "Интервал повтора при аварийном завершении", 3);
			ВыводДанныхВТабличныйДокументГруппы(Объект, "Количество повторов при аварийном завершении", 3);
		ИначеЕсли ВРЕГ(ИмяОбъекта) = "ПОДПИСКИНАСОБЫТИЯ" Тогда	
			ВыводДанныхВТабличныйДокументГруппы(Объект, "Обработчик", 3);
			ВыводДанныхВТабличныйДокументГруппы(Объект, "Событие", 3);
		ИначеЕсли ВРЕГ(ИмяОбъекта) = "НУМЕРАТОРЫДОКУМЕНТОВ" Тогда
			ВыводДанныхВТабличныйДокументГруппы(Объект, "Периодичность номера", 3);
		ИначеЕсли ВРЕГ(ИмяОбъекта) = "ПОСЛЕДОВАТЕЛЬНОСТИ" Тогда	
			ВыводИнформацииПоОбъекту(Объект, "Документы", , , Неопределено, , 4);
		ИначеЕсли ВРЕГ(ИмяОбъекта) = "СПРАВОЧНИКИ" Тогда
			// владельцы
			ВыводИнформацииПоОбъекту(Объект, "Владельцы", , Неопределено, Неопределено);
			
			ИерархическийСправочник = Объект.Иерархический;
			ИерархияЭлементов = Ложь;
			Если ИерархическийСправочник Тогда
				Если Строка(Объект.ВидИерархии) = "ИерархияЭлементов" Тогда
					ИерархияЭлементов = Истина;
				КонецЕсли;
			КонецЕсли;
			
			// предопределенные значения
			ВыводСпискаПредопределенныхЭлементов("Справочник", Объект.Имя, ИерархическийСправочник И НЕ ИерархияЭлементов);
		ИначеЕсли ВРЕГ(ИмяОбъекта) = "ДОКУМЕНТЫ" Тогда
			// движения
			ВыводИнформацииПоОбъекту(Объект, "Движения", , Неопределено, Неопределено);
		ИначеЕсли ВРЕГ(ИмяОбъекта) = "ЖУРНАЛЫДОКУМЕНТОВ" Тогда
			// графы журнала
			ВыводИнформацииПоОбъекту(Объект, "Графы", , , Неопределено);
		ИначеЕсли ВРЕГ(ИмяОбъекта) = "ПЕРЕЧИСЛЕНИЯ" Тогда
			ВыводИнформацииПоОбъекту(Объект, "ЗначенияПеречисления", , , Неопределено);
		ИначеЕсли Найти(ВРЕГ(ИмяОбъекта), "РЕГИСТРЫ") > 0 Тогда
			Если ВРЕГ(ИмяОбъекта) = "РЕГИСТРЫСВЕДЕНИЙ" Тогда 
				ВыводДанныхВТабличныйДокументГруппы(Объект, "Периодичность регистра сведений");
				ВыводДанныхВТабличныйДокументГруппы(Объект, "Режим записи");
			ИначеЕсли ВРЕГ(ИмяОбъекта) = "РЕГИСТРЫНАКОПЛЕНИЯ" Тогда 
				ВыводДанныхВТабличныйДокументГруппы(Объект, "Вид регистра");
			ИначеЕсли ВРЕГ(ИмяОбъекта) = "РЕГИСТРЫБУХГАЛТЕРИИ" Тогда 
				ВыводДанныхВТабличныйДокументГруппы(Объект, "Корреспонденция");
				ВыводДанныхВТабличныйДокументГруппы(Объект, "План счетов");
			ИначеЕсли ВРЕГ(ИмяОбъекта) = "РЕГИСТРЫРАСЧЕТА" Тогда 
				ВыводДанныхВТабличныйДокументГруппы(Объект, "Периодичность");
				
				// перерасчеты
				ВыводИнформацииПоОбъекту(Объект, "Перерасчеты", , Неопределено, Неопределено);
			КонецЕсли;
			
			// измерения
			ВыводИнформацииПоОбъекту(Объект, "Измерения");
			
			// ресурсы
			Если Объект.Ресурсы.Количество() > 0 Тогда
				ВыводДанныхВТабличныйДокумент(Макет.ПолучитьОбласть("Уровень" + (2 + НачальныйУровеньГруппировки)), "Ресурсы");	
			КонецЕсли;	
			Для Каждого Ресурс Из Объект.Ресурсы Цикл
				ВыводДанныхВТабличныйДокумент(Макет.ПолучитьОбласть("Уровень" + (3 + НачальныйУровеньГруппировки)), Ресурс.Синоним, Ресурс.Комментарий, ОпределитьТипОбъекта(Ресурс));
				Если ВРЕГ(ИмяОбъекта) = "РЕГИСТРЫБУХГАЛТЕРИИ" Тогда	
					Если Ресурс.ПризнакУчета <> Неопределено Тогда
						ВыводДанныхВТабличныйДокумент(Макет.ПолучитьОбласть("Уровень" + (4 + НачальныйУровеньГруппировки)), "Признак учета", , Ресурс.ПризнакУчета);
					КонецЕсли;	
					Если Ресурс.ПризнакУчетаСубконто <> Неопределено Тогда
						ВыводДанныхВТабличныйДокумент(Макет.ПолучитьОбласть("Уровень" + (4 + НачальныйУровеньГруппировки)), "Признак учета субконто", , Ресурс.ПризнакУчетаСубконто);
					КонецЕсли;
				КонецЕсли;	
			КонецЦикла;
		ИначеЕсли ВРЕГ(ИмяОбъекта) = "ПЛАНЫВИДОВХАРАКТЕРИСТИК" Тогда
			// адресация
			ВыводДанныхВТабличныйДокументГруппы(Объект, "Дополнительные значения характеристик");
			
			// предопределнные
			ВыводСпискаПредопределенныхЭлементов("ПланВидовХарактеристик", Объект.Имя, Ложь);
		ИначеЕсли ВРЕГ(ИмяОбъекта) = "ПЛАНЫВИДОВРАСЧЕТА" Тогда
			// предопределнные виды начислений / удержаний
			ВыводСпискаПредопределенныхЭлементов("ПланВидовРасчета", Объект.Имя, Ложь);
		ИначеЕсли ВРЕГ(ИмяОбъекта) = "ПЛАНЫСЧЕТОВ" Тогда
			// счета
			ВыводСпискаПредопределенныхЭлементов("ПланСчетов", Объект.Имя, Ложь, "Код", "Наименование", "Вид");
			
			// признаки учета
			ВыводИнформацииПоОбъекту(Объект, "Признаки учета");
			
			// признаки учета субконто
			ВыводИнформацииПоОбъекту(Объект, "Признаки учета субконто");
		ИначеЕсли ВРЕГ(ИмяОбъекта) = "ЗАДАЧИ" Тогда
			// адресация
			ВыводДанныхВТабличныйДокументГруппы(Объект, "Адресация");
			
			// основной реквизит адресации
			ВыводДанныхВТабличныйДокументГруппы(Объект, "Основной реквизит адресации");
			
			// текущий исполнитель
			ВыводДанныхВТабличныйДокументГруппы(Объект, "Текущий исполнитель");
			
			// реквизиты адресации
			ВыводИнформацииПоОбъекту(Объект, "Реквизиты адресации");
		ИначеЕсли ВРЕГ(ИмяОбъекта) = "БИЗНЕСПРОЦЕССЫ" Тогда
			// задача
			ВыводДанныхВТабличныйДокументГруппы(Объект, "Задача");
		ИначеЕсли ВРЕГ(ИмяОбъекта) = "ВНЕШНИЕИСТОЧНИКИДАННЫХ" Тогда
			ВыводИнформацииПоОбъекту(Объект, "Таблицы", , , Неопределено);
			Продолжить;
		КонецЕсли;	
		
		// реквизиты
		ВыводИнформацииПоОбъекту(Объект, "Реквизиты");
		
		// табличные части
		ВыводИнформацииПоОбъекту(Объект, "Табличные части", , , Неопределено);
		
		// команды
		Если ВерсияПлатформы = 82 Тогда
			ВыводИнформацииПоОбъекту(Объект, "Команды", , , "ТипПараметраКоманды");
		КонецЕсли;	
		
		// макеты
		ВыводИнформацииПоОбъекту(Объект, "Макеты", , , "ТипМакета"); 
		
		// вводится на основании
		ВыводИнформацииПоОбъекту(Объект, "Вводится на основании", , Неопределено, Неопределено);
	КонецЦикла;	
КонецПроцедуры	

// возвращает подробное описание типа объекта
Функция ОпределитьТипОбъекта(Объект)
	Строка = "" + Объект.Тип;
	Если Строка = "Строка" Тогда
		Строка = "- " + Строка + ", " + ?(Объект.Тип.КвалификаторыСтроки.Длина = 0, "Неограниченная", Объект.Тип.КвалификаторыСтроки.Длина);	
	ИначеЕсли Строка = "Число" Тогда
		Строка = "- " + Строка + ", " + Объект.Тип.КвалификаторыЧисла.Разрядность + "." + Объект.Тип.КвалификаторыЧисла.РазрядностьДробнойЧасти;
	ИначеЕсли Строка = "Булево" ИЛИ Строка = "Дата" Тогда
		Строка = "- " + Строка;
	ИначеЕсли Не ЗначениеЗаполнено(Строка) Тогда
		Строка = "";
	Иначе
		Строка = "• " + Строка;
	КонецЕсли;	
	
	Возврат Строка;
КонецФункции

// выводится информация по указанному объекту метаданных
Процедура ВыводИнформацииПоОбъекту(Объект, СинонимОбъекта, Значение = "Синоним", Комментарий = "Комментарий", Тип = "Тип", ВыводЗаголовка = Истина, Уровень = Неопределено)
	ИмяОбъекта = СтрЗаменить(СинонимОбъекта, " ", "");
	Попытка
		// настроим уровни
		Если Уровень <> Неопределено Тогда 
			УровеньЗначения = Уровень;
			УровеньЗаголовка = Уровень - 1;
		Иначе 	
			УровеньЗначения = ?(ВыводЗаголовка, УровеньЗаголовка + 1, УровеньЗаголовка);
		КонецЕсли;	
		
		Если Объект[ИмяОбъекта].Количество() > 0 Тогда
			Если ВыводЗаголовка Тогда
				ВыводДанныхВТабличныйДокумент(Макет.ПолучитьОбласть("Уровень" + УровеньЗаголовка), СинонимОбъекта);
			КонецЕсли;	
		Иначе
			УровеньЗаголовка = 2;
		КонецЕсли;
		
		Для Каждого ПодОбъект Из Объект[ИмяОбъекта] Цикл
			Попытка
				ИмяВИсточникеДанных = " [" + ПодОбъект.ИмяВИсточникеДанных + "]"; // для внешних источников данных		
			Исключение
				ИмяВИсточникеДанных = "";
			КонецПопытки;	
			Если СинонимОбъекта = "Движения" Тогда // по документам
				ТипОбъекта = "";
				Попытка
					РН = ПодОбъект.ВидРегистра;	
					ТипОбъекта = "Регистр накопления";
				Исключение
					Попытка
						РС = ПодОбъект.РежимЗаписи;	
						ТипОбъекта = "Регистр сведений";
					Исключение
						Попытка
							РБ = ПодОбъект.ПланСчетов;	
							ТипОбъекта = "Регистр бухгалтерии";
						Исключение
						КонецПопытки;
					КонецПопытки;
				КонецПопытки;	
			Иначе
				ТипОбъекта = ?(Тип = Неопределено, "", ?(Тип = "Тип", ОпределитьТипОбъекта(ПодОбъект), ПодОбъект[Тип]));
			КонецЕсли;	
			
			ВыводДанныхВТабличныйДокумент(Макет.ПолучитьОбласть("Уровень" + УровеньЗначения), ?(ПустаяСтрока(ПодОбъект[Значение]), ПодОбъект.Имя, ПодОбъект[Значение]) + ИмяВИсточникеДанных, ?(Комментарий = Неопределено, "", ПодОбъект[Комментарий]), ТипОбъекта);
			
			Если СинонимОбъекта = "Табличные части" Тогда
				// реквизиты табличной части
				Для Каждого Реквизит Из ПодОбъект.Реквизиты Цикл
					ВыводДанныхВТабличныйДокумент(ОбластьУровень4, ?(ПустаяСтрока(Реквизит.Синоним), Реквизит.Имя, Реквизит.Синоним), Реквизит.Комментарий, ОпределитьТипОбъекта(Реквизит));
				КонецЦикла;
			ИначеЕсли СинонимОбъекта = "Таблицы" Тогда // для внешних источников данных
				// поля внешней таблицы
				Для Каждого Реквизит Из ПодОбъект.Поля Цикл
					ВыводДанныхВТабличныйДокумент(ОбластьУровень4, ?(ПустаяСтрока(Реквизит.Синоним), Реквизит.Имя, Реквизит.Синоним) + " [" + Реквизит.ИмяВИсточникеДанных + "]", Реквизит.Комментарий, ОпределитьТипОбъекта(Реквизит));
				КонецЦикла;
				
				// поля ключа
				ВыводИнформацииПоОбъекту(ПодОбъект, "Поля ключа", "Имя", Неопределено, Неопределено);
				
				// поле представления
				ВыводДанныхВТабличныйДокумент(ОбластьУровень2, "Поле представления");
				ВыводДанныхВТабличныйДокумент(ОбластьУровень3, ПодОбъект.ПолеПредставления);
				
				// команды
				ВыводИнформацииПоОбъекту(ПодОбъект, "Команды", , , "ТипПараметраКоманды");
				
				// макеты
				ВыводИнформацииПоОбъекту(ПодОбъект, "Макеты", , Неопределено, Неопределено);
			ИначеЕсли СинонимОбъекта = "Подсистемы" Тогда 
				УровеньЗаголовка = УровеньЗаголовка + 1;
				ВыводИнформацииПоОбъекту(ПодОбъект, "Подсистемы", , , Неопределено, Ложь);
			КонецЕсли;
		КонецЦикла;
	Исключение КонецПопытки;
КонецПроцедуры

// выводит список предопределенных значений объектов
Процедура ВыводСпискаПредопределенныхЭлементов(ТипОбъекта, ИмяОбъекта, Иерархия, Значение = "Наименование", Комментарий = Неопределено, Тип = Неопределено)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИмяОбъекта." + Значение + ?(НЕ Иерархия, "", ",
	|	ИмяОбъекта.Родитель КАК Группа") + ?(Комментарий = Неопределено, "", ",
	|	ИмяОбъекта." + Комментарий) + ?(Тип = Неопределено, "", ",
	|	ИмяОбъекта." + Тип) + "
	|ИЗ
	|	" + ТипОбъекта + "." + ИмяОбъекта + " КАК ИмяОбъекта
	|ГДЕ
	|	ИмяОбъекта.Предопределенный" + ?(НЕ Иерархия, "", " И ИмяОбъекта.ЭтоГруппа = ЛОЖЬ") + "
	|УПОРЯДОЧИТЬ ПО
	|	Код";
	
	Попытка
		Результат = Запрос.Выполнить();
	Исключение 
		Возврат;
	КонецПопытки;
	Выборка = Результат.Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		ВыводДанныхВТабличныйДокумент(ОбластьУровень2, "Предопределенные значения");
	КонецЕсли;	
	
	Группа = "";
	Пока Выборка.Следующий() Цикл
		Если Иерархия Тогда
			Если Выборка.Группа <> Группа Тогда
				ВыводДанныхВТабличныйДокумент(ОбластьУровень3, Выборка.Группа);
			КонецЕсли;
			Группа = Выборка.Группа;
			
			ВыводДанныхВТабличныйДокумент(ОбластьУровень4, Выборка[Значение]);
		Иначе			
			ВыводДанныхВТабличныйДокумент(ОбластьУровень3, Выборка[Значение], ?(Комментарий = Неопределено, "", Выборка[Комментарий]), ?(Тип = Неопределено, "", ?(Тип = "Тип", ОпределитьТипОбъекта(Выборка), Выборка[Тип])));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// обработчик при открытии отчета
Процедура ПриОткрытии()
	// определим версию платформы
	ВерсияПлатформы = 0;
	НомерРелиза = 0;
	ПолучитьВерсиюПлатформы();
	
	// заполним таблицу картинками объектов
	МакетКартинки = ПолучитьМакет("Значки");
	Область = МакетКартинки.ПолучитьОбласть("Версия8_2");
	Для Каждого Значок Из Область.Рисунки Цикл
		Запись = ТаблицаЗначков.Добавить();
		Запись.Значение = Значок.Имя;
		Запись.Картинка = Область.Рисунки[Значок.Имя].Картинка;
	КонецЦикла;
	
	// заполнение данными таблицы объектов
	ЗаполнитьТаблицуОбъектов();

	// восстановим сохраненные настройки
	Если ВосстановитьЗначение("ВыводитьТолькоИменаОбъектов") = Неопределено Тогда
		ВыводитьТолькоИменаОбъектов = Ложь;
	Иначе
		ВыводитьТолькоИменаОбъектов = ВосстановитьЗначение("ВыводитьТолькоИменаОбъектов");
	КонецЕсли;
	
	Если ВосстановитьЗначение("СписокОбъектов") = Неопределено Тогда
		Для Каждого Стр Из СписокОбъектов Цикл
			Стр.Пометка = Истина;
		КонецЦикла;	
	Иначе
		СписокОбъектов = ВосстановитьЗначение("СписокОбъектов");
	КонецЕсли;
КонецПроцедуры

// добавляет строку в список метаданных
Процедура ДобавитьОбъектВТаблицу(Представление, Картинка = Неопределено, Подчиненный = Ложь)
	Имя = ПривестиПредставлениеКИмени(Представление);
	
	Если Картинка = Неопределено Тогда 
		ПоискКартинки = ТаблицаЗначков.НайтиПоЗначению(СтрЗаменить(Имя, "-", ""));
		Если ПоискКартинки <> Неопределено Тогда
			Картинка = ПоискКартинки.Картинка;
		КонецЕсли;	
	КонецЕсли;	
	
	СписокОбъектов.Добавить(Имя, Представление + ?(Подчиненный, "-", ""), , Картинка);	
КонецПроцедуры

// возвращает строку "Имя поля" в формате "ИмяПоля"
Функция ПривестиПредставлениеКИмени(Знач Строка) Экспорт
	
	Строка = СтрЗаменить(Строка, ".", "");
	Строка = СтрЗаменить(Строка, ",", "");
	Строка = СтрЗаменить(Строка, " ", "");
	Если Найти(Строка, " ") = 0 Тогда
		ИтоговаяСтрока = Строка;
	Иначе 
		ИтоговаяСтрока = "";
		Пока Найти(Строка, " ") > 0 Цикл
			Поиск = Найти(Строка, " ");
			Подстрока = Лев(Строка, Поиск - 1);
			Строка = Сред(Строка, Поиск + 1);
			
			ИтоговаяСтрока = ИтоговаяСтрока + ВРЕГ(Лев(Подстрока, 1)) + Сред(Подстрока, 2);
		КонецЦикла;	
		ИтоговаяСтрока = ИтоговаяСтрока + ВРЕГ(Лев(Строка, 1)) + Сред(Строка, 2);
	КонецЕсли;
	
	Возврат ИтоговаяСтрока;
	
КонецФункции

// заполнение списка объектов конфигурации
Процедура ЗаполнитьТаблицуОбъектов()
	// заполним список объектов
	ДобавитьОбъектВТаблицу("Общие");
	ДобавитьОбъектВТаблицу("Подсистемы", , Истина);
	ДобавитьОбъектВТаблицу("Общие модули", , Истина);
	ДобавитьОбъектВТаблицу("Параметры сеанса", , Истина);
	ДобавитьОбъектВТаблицу("Роли", , Истина);
	ДобавитьОбъектВТаблицу("Планы обмена", , Истина);
	ДобавитьОбъектВТаблицу("Критерии отбора", , Истина);
	ДобавитьОбъектВТаблицу("Подписки на события", , Истина);
	ДобавитьОбъектВТаблицу("Регламентные задания", , Истина);
	Если ВерсияПлатформы = 82 Тогда
		ДобавитьОбъектВТаблицу("Функциональные опции", , Истина);
		ДобавитьОбъектВТаблицу("Параметры функциональных опций", , Истина);
		ДобавитьОбъектВТаблицу("Хранилища настроек", , Истина);
		ДобавитьОбъектВТаблицу("Общие команды", , Истина);
		ДобавитьОбъектВТаблицу("Группы команд", , Истина);
	КонецЕсли;
	ДобавитьОбъектВТаблицу("Интерфейсы", , Истина);
	ДобавитьОбъектВТаблицу("Общие макеты", , Истина);
	Если ВерсияПлатформы = 82 Тогда
		ДобавитьОбъектВТаблицу("Общие реквизиты", , Истина);
		ДобавитьОбъектВТаблицу("XDTO-пакеты", , Истина);
	Иначе 
		ДобавитьОбъектВТаблицу("Пакеты XDTO", , Истина);
	КонецЕсли;
	ДобавитьОбъектВТаблицу("Web-сервисы", , Истина);
	ДобавитьОбъектВТаблицу("WS-ссылки", , Истина);
	ДобавитьОбъектВТаблицу("Элементы стиля", , Истина);
	Если ВерсияПлатформы = 82 Тогда
		ДобавитьОбъектВТаблицу("Стили", , Истина);
	КонецЕсли;
	
	ДобавитьОбъектВТаблицу("Константы", БиблиотекаКартинок.Константа);
	ДобавитьОбъектВТаблицу("Справочники", БиблиотекаКартинок.Справочник);
	ДобавитьОбъектВТаблицу("Документы", БиблиотекаКартинок.Документ);
	ДобавитьОбъектВТаблицу("Нумераторы документов", , Истина);
	ДобавитьОбъектВТаблицу("Последовательности", , Истина);
	ДобавитьОбъектВТаблицу("Журналы документов", БиблиотекаКартинок.ЖурналДокументов);
	ДобавитьОбъектВТаблицу("Перечисления", БиблиотекаКартинок.Перечисление);
	ДобавитьОбъектВТаблицу("Отчеты", БиблиотекаКартинок.Отчет);
	ДобавитьОбъектВТаблицу("Обработки", БиблиотекаКартинок.Обработка);
	ДобавитьОбъектВТаблицу("Планы видов характеристик", БиблиотекаКартинок.ПланВидовХарактеристик);
	ДобавитьОбъектВТаблицу("Планы счетов", БиблиотекаКартинок.ПланСчетов);
	ДобавитьОбъектВТаблицу("Планы видов расчета", БиблиотекаКартинок.ПланВидовРасчета);
	ДобавитьОбъектВТаблицу("Регистры сведений", БиблиотекаКартинок.РегистрСведений);
	ДобавитьОбъектВТаблицу("Регистры накопления", БиблиотекаКартинок.РегистрНакопления);
	ДобавитьОбъектВТаблицу("Регистры бухгалтерии", БиблиотекаКартинок.РегистрБухгалтерии);
	ДобавитьОбъектВТаблицу("Регистры расчета", БиблиотекаКартинок.РегистрРасчета);
	ДобавитьОбъектВТаблицу("Бизнес процессы",  БиблиотекаКартинок.БизнесПроцесс);
	ДобавитьОбъектВТаблицу("Задачи", БиблиотекаКартинок.Задача);
	// внешние источники данных появились в 14 релизе платформы
	Если ВерсияПлатформы = 82 И НомерРелиза > 14 Тогда
		ДобавитьОбъектВТаблицу("Внешние источники данных", БиблиотекаКартинок.ВнешнийИсточникДанных);
	КонецЕсли;	
КонецПроцедуры

// открыть настройки
Процедура ДействияФормыНастройки(Кнопка)
	Форма = ПолучитьФорму("ФормаНастроек", ЭтаФорма);
	Форма.ВыводитьТолькоИменаОбъектов = ВыводитьТолькоИменаОбъектов;

	ГлГруппа = Форма.ДеревоЗначений.Строки.Добавить();
    ГлГруппа.Объект = Метаданные.Имя;
	ГлГруппа.Картинка = БиблиотекаКартинок.ПланВидовХарактеристикОбъект;
	ГлГруппа.Пометка = Истина;
	ГлГруппа.ИмяОбъекта = Метаданные.Имя;
	Для Каждого Стр Из СписокОбъектов Цикл
		Если Прав(Стр.Представление, 1) <> "-" Тогда
			Группы = ГлГруппа.Строки.Добавить();
			Группы.Объект = Стр.Представление;
			Группы.Картинка = Стр.Картинка;	
			Группы.Пометка = Стр.Пометка;
			Группы.ИмяОбъекта = Стр.Значение;
		Иначе
			Страницы = Группы.Строки.Добавить();
			Страницы.Объект = СтрЗаменить(Стр.Представление, "-", "");
			Страницы.Картинка = Стр.Картинка;
			Страницы.Пометка = Стр.Пометка;
			Страницы.ИмяОбъекта = Стр.Значение;
		КонецЕсли;
	КонецЦикла;	
	
	Форма.ОткрытьМодально();
КонецПроцедуры

// сохранение отчета в файл
Процедура ОсновныеДействияФормыСохранитьВЭксель(Кнопка)
	Режим = РежимДиалогаВыбораФайла.Сохранение;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Фильтр = "Табличный документ Excel (*.xls)|*.xls";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.Заголовок = "Сохранение файла";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ВыбФайл = ДиалогОткрытияФайла.ПолноеИмяФайла;
		
		Таб.Записать(ВыбФайл, ТипФайлаТабличногоДокумента.XLS);
	Иначе
		Предупреждение("Файл не указан");
	КонецЕсли;
КонецПроцедуры

// обработчик при закрытии отчета
Процедура ПриЗакрытии()
	// сохраним текущие настройки
	СохранитьЗначение("ВыводитьТолькоИменаОбъектов", ВыводитьТолькоИменаОбъектов);
	СохранитьЗначение("СписокОбъектов", СписокОбъектов);
КонецПроцедуры

// макет
Макет = ПолучитьМакет("Макет");

// табличный документ
Таб = ЭлементыФормы.ПолеТабличногоДокумента1;

// присвоим значения областей макета
ОбластьУровень0 = Макет.ПолучитьОбласть("Уровень0");
ОбластьУровень1 = Макет.ПолучитьОбласть("Уровень1");
ОбластьУровень2 = Макет.ПолучитьОбласть("Уровень2");
ОбластьУровень3 = Макет.ПолучитьОбласть("Уровень3");
ОбластьУровень4 = Макет.ПолучитьОбласть("Уровень4");
ОбластьУровень5 = Макет.ПолучитьОбласть("Уровень5");
ОбластьУровень6 = Макет.ПолучитьОбласть("Уровень6");
ОбластьУровень7 = Макет.ПолучитьОбласть("Уровень7");
ОбластьУровень8 = Макет.ПолучитьОбласть("Уровень8");
ОбластьУровень9 = Макет.ПолучитьОбласть("Уровень9");

ЭтоПервый = Истина;

УровеньЗаголовка = 2;
