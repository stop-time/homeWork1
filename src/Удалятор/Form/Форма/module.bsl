
Функция ЗаписьРСВедомая(СтрТабСсылок)
	
	Для Каждого ИзмерениеРС Из СтрТабСсылок.Метаданные.Измерения Цикл
		Если ИзмерениеРС.Ведущее Тогда
			Если СтрТабСсылок.Данные[ИзмерениеРС.Имя] = СтрТабСсылок.Ссылка	Тогда
				Возврат Истина;	
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;	
	
КонецФункции							

Процедура СообщитьЛог(Сообщение,ТекстДокумент)
	_Сообщение = Формат(ТекущаяДата(),"ДФ='dd.MM.yyyy HH:mm:ss'")+":"+Сообщение;
	Сообщить(_Сообщение);	
	ТекстДокумент.ДобавитьСтроку(_Сообщение);
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	МассивПомеченныхНаУдаление = НайтиПомеченныеНаУдаление();
	
	ИмяФайлаПропущенные = ПапкаСлужебныхФайлов+"/Пропущенные.dat";
	ИмяФайлаЛог = ПапкаСлужебныхФайлов+"/Лог.txt";
	ЛогТекстовыйДокумент = Новый ТекстовыйДокумент;
	
	Попытка
		ЛогТекстовыйДокумент.Прочитать(ИмяФайлаЛог);
	Исключение
	КонецПопытки;
	
	Пропущенные = Неопределено;
	Попытка
		Пропущенные = ЗначениеИзФайла(ИмяФайлаПропущенные);
	Исключение
	КонецПопытки;
	
	Если Пропущенные = Неопределено или Пропущенные.Колонки.Количество()=0 Тогда
		Пропущенные = Новый ТаблицаЗначений();
		Пропущенные.Колонки.Добавить("Ссылка");
		Пропущенные.Колонки.Добавить("КтоСсылается");
	КонецЕсли;
	
	Для Каждого СтрПропущенные Из Пропущенные Цикл
		ИндЭл = МассивПомеченныхНаУдаление.Найти(СтрПропущенные.Ссылка);
		Если ИндЭл <> Неопределено Тогда
			МассивПомеченныхНаУдаление.Удалить(ИндЭл);
		КонецЕсли;
	КонецЦикла;
	
	ВсегоУдалено = 0;
	КолВоПомеченныхНаУдаление = МассивПомеченныхНаУдаление.Количество();
	СообщитьЛог("Всего помечено на удаление "+КолВоПомеченныхНаУдаление,ЛогТекстовыйДокумент);
	Пока Истина Цикл
		Если КолВоПомеченныхНаУдаление > 0 Тогда
			ПомечНаУдаление = МассивПомеченныхНаУдаление[0];
			СообщитьЛог("Проверяем: "+ПомечНаУдаление,ЛогТекстовыйДокумент);
			ГруппаОбъектовНаУдаление = Новый Массив;
			
			МассивВедомыхЗаписей = Новый Массив;
			МассивНеВедомыхЗаписей = Новый Массив;
			
			ГруппаОбъектовНаУдаление.Добавить(ПомечНаУдаление);
			ПродолжаемПоиски = Истина;
			УспешноУдалили = Ложь;
			КтоСсылается = Неопределено;
			Пока ПродолжаемПоиски Цикл
				ТабСсылок = НайтиПоСсылкам(ГруппаОбъектовНаУдаление);
				МассивСсылаетсяНаСебя = Истина;
				Для Каждого СтрТабСсылок Из ТабСсылок Цикл
					Если Метаданные.РегистрыСведений.Содержит(СтрТабСсылок.Метаданные) Тогда
						Если ЗаписьРСВедомая(СтрТабСсылок) Тогда
							МассивВедомыхЗаписей.Добавить(СтрТабСсылок.Данные);
							ВремИндМассивНеВедомыхЗаписей = МассивНеВедомыхЗаписей.Найти(СтрТабСсылок.Данные);
							Если ВремИндМассивНеВедомыхЗаписей<>Неопределено Тогда
								МассивНеВедомыхЗаписей.Удалить(ВремИндМассивНеВедомыхЗаписей);	
							КонецЕсли;		
							Продолжить;	
						Иначе
							ВремИндМассивВедомыхЗаписей = МассивВедомыхЗаписей.Найти(СтрТабСсылок.Данные);
							Если ВремИндМассивВедомыхЗаписей=Неопределено Тогда
								ВремИндМассивНеВедомыхЗаписей = МассивНеВедомыхЗаписей.Найти(СтрТабСсылок.Данные);
								Если ВремИндМассивНеВедомыхЗаписей=Неопределено Тогда
									МассивНеВедомыхЗаписей.Добавить(СтрТабСсылок.Данные);
								КонецЕсли;		
							КонецЕсли;	
							Продолжить;	
						КонецЕсли;	
					КонецЕсли;	
					Если ГруппаОбъектовНаУдаление.Найти(СтрТабСсылок.Данные)=Неопределено Тогда
						МассивСсылаетсяНаСебя = Ложь;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если МассивСсылаетсяНаСебя Тогда
					Если МассивНеВедомыхЗаписей.Количество() > 0 Тогда
						Для Каждого ЭлМассивНеВедомыхЗаписей Из МассивНеВедомыхЗаписей Цикл
							СообщитьЛог("   Не ведомая запись "+ЭлМассивНеВедомыхЗаписей,ЛогТекстовыйДокумент);	
						КонецЦикла;
					Иначе	
						Попытка
							НачатьТранзакцию();
							Для Каждого ЭлГруппаОбъектовНаУдаление Из ГруппаОбъектовНаУдаление Цикл
								Об = ЭлГруппаОбъектовНаУдаление.ПолучитьОбъект();
								Если Об <> Неопределено Тогда
									СообщитьЛог("   Удаляем: "+ЭлГруппаОбъектовНаУдаление,ЛогТекстовыйДокумент);
									Если ЭлГруппаОбъектовНаУдаление.ПометкаУдаления Тогда
										Об.Удалить();
									Иначе
										СообщитьЛог("      Ошибка! Эл-т не помечен на удаление: "+ЭлГруппаОбъектовНаУдаление,ЛогТекстовыйДокумент);
									КонецЕсли;	
								КонецЕсли;	
								ВсегоУдалено = ВсегоУдалено + 1;
							КонецЦикла;
							ЗафиксироватьТранзакцию();
							УспешноУдалили = Истина;
						Исключение
							ОтменитьТранзакцию();
							СообщитьЛог(ОписаниеОшибки(),ЛогТекстовыйДокумент);
						КонецПопытки;
					КонецЕсли;	
					ПродолжаемПоиски = Ложь;
				Иначе
					Для Каждого СтрТабСсылок Из ТабСсылок Цикл
						Если ГруппаОбъектовНаУдаление.Найти(СтрТабСсылок.Данные)<>Неопределено Тогда
							Продолжить;	
						КонецЕсли;	
						
						Если Метаданные.РегистрыСведений.Содержит(СтрТабСсылок.Метаданные) Тогда
							//Если Не ЗаписьРСВедомая(СтрТабСсылок) Тогда
							//	Сообщить("   Есть не ведОмая запись РС "+СтрТабСсылок.Данные);
							//	ПродолжаемПоиски = Ложь;
							//	Прервать;
							//КонецЕсли;	
						Иначе
							Если СтрТабСсылок.Данные.ПометкаУдаления Тогда
								СообщитьЛог("   Дополняем по ссылкам: "+СтрТабСсылок.Данные,ЛогТекстовыйДокумент);
								ГруппаОбъектовНаУдаление.Добавить(СтрТабСсылок.Данные);
							Иначе
								СообщитьЛог("   Есть непомеч. объект "+СтрТабСсылок.Данные,ЛогТекстовыйДокумент);
								КтоСсылается = СтрТабСсылок.Данные;
								ПродолжаемПоиски = Ложь;
								Прервать;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого ЭлГруппаОбъектовНаУдаление Из ГруппаОбъектовНаУдаление Цикл
				ИндЭл = МассивПомеченныхНаУдаление.Найти(ЭлГруппаОбъектовНаУдаление);
				Если ИндЭл <> Неопределено Тогда
					МассивПомеченныхНаУдаление.Удалить(ИндЭл);
					Если Не УспешноУдалили Тогда
						Если Пропущенные.Найти(ЭлГруппаОбъектовНаУдаление,"Ссылка")=Неопределено Тогда
							НовСтрокаПропущенные = Пропущенные.Вставить(0);
							НовСтрокаПропущенные.Ссылка = ЭлГруппаОбъектовНаУдаление;
							НовСтрокаПропущенные.КтоСсылается = КтоСсылается;
						КонецЕсли;	
					КонецЕсли;	
				КонецЕсли;	
			КонецЦикла;
			
			КолВоПомеченныхНаУдаление = МассивПомеченныхНаУдаление.Количество();
			
			Если (КолВоПомеченныхНаУдаление/100) = Цел(КолВоПомеченныхНаУдаление/100) Тогда
				СообщитьЛог("******* сохраняем в файл ***********",ЛогТекстовыйДокумент);
				ЗначениеВФайл(ИмяФайлаПропущенные,Пропущенные);
				ЛогТекстовыйДокумент.Записать(ИмяФайлаЛог);
			КонецЕсли;	
			
			Состояние("Всего удалено "+ВсегоУдалено+", осталось проверить "+КолВоПомеченныхНаУдаление+", пропущено "+Пропущенные.Количество());
			ОбработкаПрерыванияПользователя();
		Иначе
			Прервать;
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

Процедура ПапкаСлужебныхФайловНачалоВыбора(Элемент, СтандартнаяОбработка)
	Длг = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Длг.Каталог = ПапкаСлужебныхФайлов;
	Длг.Заголовок = "Укажите каталог служебных файлов";
	Если Длг.Выбрать() Тогда
		ПапкаСлужебныхФайлов = Длг.Каталог;
	КонецЕсли;
КонецПроцедуры

Процедура ПапкаСлужебныхФайловОткрытие(Элемент, СтандартнаяОбработка)
	ИмяФайлаЛог = ПапкаСлужебныхФайлов+"/Лог.txt";
	ЛогТекстовыйДокумент = Новый ТекстовыйДокумент;
	СтандартнаяОбработка = Ложь;
	Попытка
		ЛогТекстовыйДокумент.Прочитать(ИмяФайлаЛог);
		ЛогТекстовыйДокумент.Показать();
	Исключение
		Сообщить("Ошибка открытия лога.");
	КонецПопытки;
КонецПроцедуры

Процедура ОсновныеДействияФормыПрочитать(Кнопка)
	Попытка
		ИмяФайлаПропущенные = ПапкаСлужебныхФайлов+"/Пропущенные.dat";
		Пропущенные = ЗначениеИзФайла(ИмяФайлаПропущенные);
	Исключение
		Сообщить("Ошибка чтения данных.");
	КонецПопытки;
КонецПроцедуры

Процедура КоманднаяПанель1Подробнее(Кнопка)
	ЗапуститьПриложение("http:\\1csoft.com\node\924");
КонецПроцедуры
